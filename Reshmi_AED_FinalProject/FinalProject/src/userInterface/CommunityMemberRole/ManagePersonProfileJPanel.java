/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.CommunityMemberRole;

import business.Person.Member;
import business.Person.Person;
import java.awt.CardLayout;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.xswingx.PromptSupport;

/**
 *
 * @author Reshmi
 */
public class ManagePersonProfileJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePersonProfileJPanel
     */
    private JPanel userProcessContainer;
    private Person person;

    public ManagePersonProfileJPanel(JPanel userProcessContainer,Person person){
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.person = person;
        PromptSupport.setPrompt("example@email.com", emailIdTxt);
        populateTable();
        editDetailsBtn.setVisible(false);
        saveBtn.setVisible(false);
        if(person.getAddress()==null||person.getEmail()==null){
            addDetailsBtn.setVisible(true);
            editDetailsBtn.setVisible(false);
        }else{
            addDetailsBtn.setVisible(false);
            editDetailsBtn.setVisible(true);
            addresstxt.setText(person.getAddress());
            emailIdTxt.setText(person.getEmail());
            addresstxt.setEditable(false);
            emailIdTxt.setEditable(false);
        }
//        if(!(person.getAddress().equals("")||person.getEmail().equals(""))){
//            addDetailsBtn.setVisible(false);
//            addresstxt.setText(person.getAddress());
//            emailIdTxt.setText(person.getEmail());
//        }
//        else{
//            addDetailsBtn.setVisible(true);
//        }
    }

    public void populateTable()
    {
        DefaultTableModel model = (DefaultTableModel)membersTable.getModel();
        model.setRowCount(0);
        if(person.getMemberDir().getMemberDirectory()!=null){
        for(Member member:person.getMemberDir().getMemberDirectory())
        {
            Object[] row = new Object[3];
            row[0] = member;
            row[1] = member.getAge();
            row[2] = member.getRelation();
            model.addRow(row);
        }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMemBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        membersTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        addDetailsBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        emailIdTxt = new javax.swing.JTextField();
        addresstxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        editDetailsBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        editMemberBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        addMemBtn.setBackground(new java.awt.Color(0, 153, 0));
        addMemBtn.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        addMemBtn.setForeground(new java.awt.Color(255, 255, 255));
        addMemBtn.setText("Add Family Members");
        addMemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMemBtnActionPerformed(evt);
            }
        });

        membersTable.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        membersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Member ID", "Age", "Relation"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(membersTable);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Personal Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 0, 11), new java.awt.Color(102, 0, 102))); // NOI18N

        addDetailsBtn.setBackground(new java.awt.Color(0, 153, 0));
        addDetailsBtn.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        addDetailsBtn.setForeground(new java.awt.Color(255, 255, 255));
        addDetailsBtn.setText("Add ");
        addDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDetailsBtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel2.setText("Email Id");

        emailIdTxt.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N

        addresstxt.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel1.setText("Address");

        editDetailsBtn.setBackground(new java.awt.Color(0, 153, 0));
        editDetailsBtn.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        editDetailsBtn.setForeground(new java.awt.Color(255, 255, 255));
        editDetailsBtn.setText("Edit ");
        editDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDetailsBtnActionPerformed(evt);
            }
        });

        saveBtn.setBackground(new java.awt.Color(0, 153, 0));
        saveBtn.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        saveBtn.setForeground(new java.awt.Color(255, 255, 255));
        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addresstxt, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                    .addComponent(emailIdTxt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addDetailsBtn, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(editDetailsBtn, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(10, 10, 10))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(147, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(addresstxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addDetailsBtn))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(emailIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(editDetailsBtn))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        backJButton.setBackground(new java.awt.Color(51, 153, 0));
        backJButton.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        editMemberBtn.setBackground(new java.awt.Color(0, 153, 0));
        editMemberBtn.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        editMemberBtn.setForeground(new java.awt.Color(255, 255, 255));
        editMemberBtn.setText("Edit Member");
        editMemberBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editMemberBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addMemBtn)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(editMemberBtn))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addMemBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(editMemberBtn))
                .addGap(29, 29, 29))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDetailsBtnActionPerformed
        String emailId = emailIdTxt.getText();
        if(addresstxt.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Kindly enter home address", "Field Empty", JOptionPane.ERROR_MESSAGE);
        }
        else if(emailIdTxt.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Kindly enter email id", "Field Empty", JOptionPane.ERROR_MESSAGE);
        }
//        else if(!(emailIdTxt.getText().equals("^[_A-Za-z0-9-]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$"))){
        else if(!isValidEmailAddress(emailId)){
            JOptionPane.showMessageDialog(null, "Kindly enter a valid email id", "Field Empty", JOptionPane.ERROR_MESSAGE);
            emailIdTxt.setText("");
        }
        else{
            
            person.setAddress(addresstxt.getText());
            person.setEmail(emailIdTxt.getText());
            JOptionPane.showMessageDialog(null, "Personal details added!", "Details Added", JOptionPane.INFORMATION_MESSAGE);
            editDetailsBtn.setVisible(true);
            clearFields();
            
        }
    }//GEN-LAST:event_addDetailsBtnActionPerformed

    public static boolean isValidEmailAddress(String email) {
   boolean result = true;
   try {
      InternetAddress emailAddr = new InternetAddress(email);
      emailAddr.validate();
   } catch (AddressException ex) {
      result = false;
   }
   return result;
}
    private void addMemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMemBtnActionPerformed
        if(person.getAddress()!=null||person.getEmail()!=null){
        AddMembersJPanel addMembersJPanel = new AddMembersJPanel(userProcessContainer,person);
        userProcessContainer.add("managePersonProfileJPanel", addMembersJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        }
        else{
            JOptionPane.showMessageDialog(null, "Kindly enter personal details first..", "Enter personal details", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_addMemBtnActionPerformed

    private void editDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editDetailsBtnActionPerformed
        if(person.getAddress()!=null||person.getEmail()!=null){
        editDetailsBtn.setVisible(false);
        addDetailsBtn.setVisible(false);
        addresstxt.setEditable(true);
        emailIdTxt.setEditable(true);
        saveBtn.setVisible(true);
        }
    }//GEN-LAST:event_editDetailsBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        if(addresstxt.getText().equals(person.getAddress())&&
                emailIdTxt.getText().equals(person.getEmail())){
            JOptionPane.showMessageDialog(null, "no change in details","No Change",JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            person.setAddress(addresstxt.getText());
            person.setEmail(emailIdTxt.getText()); 
            JOptionPane.showMessageDialog(null, "Personal details updated!", "Details Updated", JOptionPane.INFORMATION_MESSAGE);
        }
        saveBtn.setVisible(false);
        editDetailsBtn.setVisible(true);
    }//GEN-LAST:event_saveBtnActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void editMemberBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editMemberBtnActionPerformed
        int selectedRow = membersTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Kindly select a row", "Select Member", JOptionPane.ERROR_MESSAGE);
        }
        else{
            Member member = (Member)membersTable.getValueAt(selectedRow, 0);
            EditMemberJPanel editMemJPanel = new EditMemberJPanel(userProcessContainer,member,person);
            userProcessContainer.add("editMemJPanel", editMemJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_editMemberBtnActionPerformed

    public void clearFields()
    {
        addresstxt.setText("");
        emailIdTxt.setText("");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDetailsBtn;
    private javax.swing.JButton addMemBtn;
    private javax.swing.JTextField addresstxt;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton editDetailsBtn;
    private javax.swing.JButton editMemberBtn;
    private javax.swing.JTextField emailIdTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable membersTable;
    private javax.swing.JButton saveBtn;
    // End of variables declaration//GEN-END:variables
}
