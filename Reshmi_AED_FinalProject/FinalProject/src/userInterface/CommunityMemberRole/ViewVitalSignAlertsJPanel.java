/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.CommunityMemberRole;

import business.Enterprise.Enterprise;
import business.Organization.HouseholdOrg;
import business.Organization.Organization;
import business.UserAccount.UserAccount;
import business.WorkQueue.HospitalWorkRequest;
import business.WorkQueue.HosptoHouseWorkRequest;
import business.WorkQueue.WorkRequest;
import com.toedter.calendar.JDateChooser;
import java.awt.CardLayout;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Reshmi
 */
public class ViewVitalSignAlertsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewVitalSignAlertsJPanel
     */
    private JPanel userProcessContainer;
    private HouseholdOrg houseOrg;
    private Enterprise enterprise;
    private UserAccount account;
    public ViewVitalSignAlertsJPanel(JPanel userProcessContainer,UserAccount account,Enterprise enterprise,Organization org) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.enterprise = enterprise;
        this.houseOrg = (HouseholdOrg)org;
        Date today = new Date();
        Date tomorrow = new Date(today.getTime() + (1000 * 60 * 60 * 24));
        dateTxt.setMinSelectableDate(tomorrow);
        populateAlertsTable();
    }

    public void populateAlertsTable()
    {
        DefaultTableModel model = (DefaultTableModel)vitalSignAlertsTable.getModel();
        model.setRowCount(0);
        for(WorkRequest request : account.getWorkQueue().getWorkRequestList())
        {
            if(request instanceof HosptoHouseWorkRequest)
            {
            Object[] row = new Object[7];
            
            row[0] = request;
            //row[1] = request.getSeverity();
            
            String alert = ((HosptoHouseWorkRequest)request).getAdminMessage();
            row[1] = alert == null ? "No Alert": alert;
            row[2] = request.getSender();
            row[3] = request.getRequestDate();
            row[4] = ((HosptoHouseWorkRequest)request).getAppointmentDate();
            //row[6] = ((HospitalWorkRequest)request).getAppointmentTime();
            row[5] = request.getStatus();
            model.addRow(row);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        vitalSignAlertsTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        dateLabel = new javax.swing.JLabel();
        dateTxt = new com.toedter.calendar.JDateChooser();
        apptConfirmBtn = new javax.swing.JButton();
        Date date = new Date();
        SpinnerDateModel sm = new SpinnerDateModel(date,null,null,Calendar.HOUR_OF_DAY);
        jSpinner1 = new javax.swing.JSpinner(sm);
        timeLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        vitalSignAlertsTable.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        vitalSignAlertsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Member", "Alert Message", "Sent By", "Sent On", "Visit Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(vitalSignAlertsTable);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userInterface/CommunityMemberRole/medical-alert.png"))); // NOI18N

        backJButton.setBackground(new java.awt.Color(0, 153, 0));
        backJButton.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Fix Appointment", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 0, 11), new java.awt.Color(102, 0, 102))); // NOI18N

        dateLabel.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        dateLabel.setText("Date");

        apptConfirmBtn.setBackground(new java.awt.Color(0, 153, 0));
        apptConfirmBtn.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        apptConfirmBtn.setForeground(new java.awt.Color(255, 255, 255));
        apptConfirmBtn.setText("Request");
        apptConfirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apptConfirmBtnActionPerformed(evt);
            }
        });

        JSpinner.DateEditor de = new JSpinner.DateEditor(jSpinner1,"HH:mm:ss");
        jSpinner1.setEditor(de);

        timeLabel.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        timeLabel.setText("Time");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(apptConfirmBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(timeLabel)
                            .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dateTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dateLabel)
                    .addComponent(dateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timeLabel)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(apptConfirmBtn)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(454, 454, 454)
                                .addComponent(jLabel1)))
                        .addGap(15, 15, 15))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(189, 189, 189)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(161, 161, 161))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(backJButton)
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void apptConfirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apptConfirmBtnActionPerformed
        int selectedRow = vitalSignAlertsTable.getSelectedRow();
        if (selectedRow < 0)
        {
           JOptionPane.showMessageDialog(null, "Please select a row", "WARNING", JOptionPane.WARNING_MESSAGE);
           return; 
        }
        else
        {
            HosptoHouseWorkRequest request = (HosptoHouseWorkRequest)vitalSignAlertsTable.getValueAt(selectedRow, 0);
           if(request.getStatus().equals("sent to member")){
           Date date = dateTxt.getDate();
           Date time = (Date)jSpinner1.getValue();
           if(dateTxt.getDate()!=null&&!jSpinner1.getValue().equals("")){
           Calendar cal = Calendar.getInstance();
           
           cal.setTime(date);
 
           // Set time fields to zero
           cal.set(Calendar.HOUR_OF_DAY, 0);
           cal.set(Calendar.MINUTE, 0);
           cal.set(Calendar.SECOND, 0);
           cal.set(Calendar.MILLISECOND, 0);
 
           
           Calendar cal1 = Calendar.getInstance();
           cal1.setTime(time);
 
           // Set time fields to zero
           cal1.set(Calendar.DAY_OF_MONTH, 0);
           cal1.set(Calendar.DAY_OF_YEAR, 0);
           cal1.set(Calendar.DAY_OF_WEEK, 0);
           // Put it back in the Date object
           time = cal.getTime();
            request.setAppointmentDate(date);
            request.setAppointmentTime(time);
            request.setStatus("Requested Visit");
//            Date date = dateTxt.getDate();
//            Date time = (Date)jSpinner1.getValue();
//            request.setTime(date+time);
//            request.setVisit(date+time);
            JOptionPane.showMessageDialog(null, "Requested for a doctor's visit", "MESSAGE", JOptionPane.INFORMATION_MESSAGE);
            populateAlertsTable();
           }else{
           JOptionPane.showMessageDialog(null, "Select the appointment date and time", "ERROR", JOptionPane.ERROR_MESSAGE);
           }
           }else{
               JOptionPane.showMessageDialog(null, "Cannot request for an appointment", "ERROR", JOptionPane.ERROR_MESSAGE);
           }
        }
    }//GEN-LAST:event_apptConfirmBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton apptConfirmBtn;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel dateLabel;
    private com.toedter.calendar.JDateChooser dateTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JTable vitalSignAlertsTable;
    // End of variables declaration//GEN-END:variables
}
