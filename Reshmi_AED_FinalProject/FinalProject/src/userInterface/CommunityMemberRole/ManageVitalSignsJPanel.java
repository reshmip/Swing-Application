/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.CommunityMemberRole;

import business.Person.Member;
import business.Person.Person;
import business.Validations.MyNumericVerifier;
import business.vitalSignSensor.VitalSign;
import java.awt.CardLayout;
import java.io.File;
import java.util.Date;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.InputVerifier;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import net.sourceforge.tess4j.Tesseract;
import net.sourceforge.tess4j.TesseractException;

/**
 *
 * @author Reshmi
 */
public class ManageVitalSignsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageVitalSignsJPanel
     */
    private JPanel userProcessContainer;
    private Person person;
    
    public ManageVitalSignsJPanel(JPanel userProcessContainer,Person person) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.person = person;
        populateComboBox();
        populateTable();
        addVerifiers();
    }
    
     private void addVerifiers() {
        InputVerifier integerVerifier = new MyNumericVerifier();
        respiratoryRateJTextField.setInputVerifier(integerVerifier);
        heartRateJTextField.setInputVerifier(integerVerifier);
        bloodPressureJTextField.setInputVerifier(integerVerifier);
        temperatureJTextField.setInputVerifier(integerVerifier);
    }
    public void populateComboBox()
    {
        memberComboBox.removeAllItems();
        //memberComboBox.addItem(person.getPersonName());
        for(Member member:person.getMemberDir().getMemberDirectory()){
            memberComboBox.addItem(member);
           
        }
    }
    
    public void populateTable()
    {
         DefaultTableModel model = (DefaultTableModel)vitalSignTable.getModel();
        model.setRowCount(0);
        //int id = person.getPersonId();
        if(person.getVitalSignList().getVitalSignList()!=null){
        for(Member member:person.getMemberDir().getMemberDirectory()){
        int patientAge = member.getAge();
        for(VitalSign vitalSign : member.getVitalSignList().getVitalSignList())
        {
            Object[] row = new Object[6];
            row[0] = vitalSign.getTimestamp();
            row[1] = member.getMemberName();
            row[2] = vitalSign.getRespiratoryRate();
            row[3] = vitalSign.getHeartRate();
            row[4] = vitalSign.getBloodPressure();
            row[5] = vitalSign.getTemperature();
            
            model.addRow(row);
            vitalSign.setStatus(member.getVitalSignList().VitalSignStatus(patientAge, vitalSign));
        }
        }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        vitalSignTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        recordVSBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        heartRateJTextField = new javax.swing.JTextField();
        memberComboBox = new javax.swing.JComboBox();
        respiratoryRateJTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        temperatureJTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        bloodPressureJTextField = new javax.swing.JTextField();
        sensorReadingBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        vitalSignTable.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        vitalSignTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Time Stamp", "Person Name", "Respiratory Rate", "Heart Rate", "Blood Pressure", "Temperature"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(vitalSignTable);

        backJButton.setBackground(new java.awt.Color(51, 153, 0));
        backJButton.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        recordVSBtn.setBackground(new java.awt.Color(51, 153, 0));
        recordVSBtn.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        recordVSBtn.setForeground(new java.awt.Color(255, 255, 255));
        recordVSBtn.setText("Record");
        recordVSBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recordVSBtnActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Record Vital Signs Readings", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 0, 11), new java.awt.Color(102, 0, 102))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel1.setText("Select member");

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel3.setText("Heart rate");

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel4.setText("Systolic blood pressure");

        memberComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        memberComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memberComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel2.setText("Respiratory rate");

        jLabel5.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel5.setText("Temperature");

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userInterface/CommunityMemberRole/vitalsign.png"))); // NOI18N

        sensorReadingBtn.setBackground(new java.awt.Color(0, 153, 0));
        sensorReadingBtn.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        sensorReadingBtn.setForeground(new java.awt.Color(255, 255, 255));
        sensorReadingBtn.setText("Sensor Reading");
        sensorReadingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sensorReadingBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(memberComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(respiratoryRateJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bloodPressureJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(sensorReadingBtn))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(heartRateJTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(temperatureJTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(memberComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(sensorReadingBtn))
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(respiratoryRateJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(heartRateJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bloodPressureJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(temperatureJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton)
                        .addGap(102, 102, 102)
                        .addComponent(recordVSBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(recordVSBtn))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void recordVSBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordVSBtnActionPerformed
        Person person = (Person)memberComboBox.getSelectedItem();
        //Member member = (Member)memberComboBox.getSelectedItem();
        try {
            int respiratoryRate = Integer.parseInt(respiratoryRateJTextField.getText());
            int heartRate = Integer.parseInt(heartRateJTextField.getText());
            int bloodPressure = Integer.parseInt(bloodPressureJTextField.getText());
            int temperature = Integer.parseInt(temperatureJTextField.getText());

            VitalSign vitalSign = new VitalSign();
            vitalSign.setRespiratoryRate(respiratoryRate);
            vitalSign.setHeartRate(heartRate);
            vitalSign.setBloodPressure(bloodPressure);
            vitalSign.setTemperature(temperature);
            vitalSign.setAlertStatus("Pending");
            /*Set current date and time as TimeStamp*/
            vitalSign.setTimestamp(new Date());
            person.getVitalSignList().createAndAddVitalSign(vitalSign);
            //JOptionPane.showMessageDialog(this, "Vital signs added!!", "Update", JOptionPane.INFORMATION_MESSAGE);
            clearFields();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Please enter values", "Error", JOptionPane.ERROR_MESSAGE);
        }
        clearFields();
        populateTable();
    }//GEN-LAST:event_recordVSBtnActionPerformed

    private void memberComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memberComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_memberComboBoxActionPerformed

    private void sensorReadingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sensorReadingBtnActionPerformed
        Member member = (Member)memberComboBox.getSelectedItem();
        if(member.getAge()<13){
            Random rr = new Random();
            int rL = 18;
            int rH = 32;
            int  respRate = rr.nextInt(rH-rL) + rL;
            respiratoryRateJTextField.setText(String.valueOf(respRate));
            
            Random bp = new Random();
            int bL = 79;
            int bH = 111;
            int bloodPress = bp.nextInt(bH-bL) + bL;
            bloodPressureJTextField.setText(String.valueOf(bloodPress));
        }
        else{
            Random rr = new Random();
            int rL = 12;
            int rH = 22;
            int  respRate = rr.nextInt(rH-rL) + rL;
            respiratoryRateJTextField.setText(String.valueOf(respRate));
            
            Random bp = new Random();
            int bL = 109;
            int bH = 121;
            int bloodPress = bp.nextInt(bH-bL) + bL;
            bloodPressureJTextField.setText(String.valueOf(bloodPress));
        }
        Random hr = new Random();
        int hL = 80;
        int hH = 110;
        int heartRate = hr.nextInt(hH-hL) + hL;
        heartRateJTextField.setText(String.valueOf(heartRate));
        
        Random temp = new Random();
        int tL = 95;
        int tH = 100;
        int temperature = temp.nextInt(tH-tL) + tL;
        temperatureJTextField.setText(String.valueOf(temperature));
    }//GEN-LAST:event_sensorReadingBtnActionPerformed

    public void readImage(){
        Tesseract instance1 = Tesseract.getInstance();
        Tesseract instance = new Tesseract();
        try{
            File imageFile = new File("C:\\Users\\Reshmi\\Pictures\\Project Images\\img_56.jpg");
            String result = instance.doOCR(imageFile);
            System.out.println(result);
        }catch(TesseractException e){
            System.out.println(e.getMessage());
        }
    }
    private void clearFields() {
        respiratoryRateJTextField.setText("");
        heartRateJTextField.setText("");
        bloodPressureJTextField.setText("");
        temperatureJTextField.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JTextField bloodPressureJTextField;
    private javax.swing.JTextField heartRateJTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox memberComboBox;
    private javax.swing.JButton recordVSBtn;
    private javax.swing.JTextField respiratoryRateJTextField;
    private javax.swing.JButton sensorReadingBtn;
    private javax.swing.JTextField temperatureJTextField;
    private javax.swing.JTable vitalSignTable;
    // End of variables declaration//GEN-END:variables
}
