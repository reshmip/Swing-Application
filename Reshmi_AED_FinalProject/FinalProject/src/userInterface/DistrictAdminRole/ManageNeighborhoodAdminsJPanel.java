/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.DistrictAdminRole;

import business.EcoDistrict;
import business.Enterprise.Enterprise;
import business.Neighborhood.Neighborhood;
import business.Organization.Organization;
import business.Person.Person;
import business.Role.DistrictAdmin;
import business.Role.NeighborhoodAdmin;
import business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Reshmi
 */
public class ManageNeighborhoodAdminsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageSupervisorsJPanel
     */
    private JPanel userProcessContainer;
    private EcoDistrict ecoDistrict;
    private Person person;
    public ManageNeighborhoodAdminsJPanel(JPanel userProcessContainer,EcoDistrict ecoDistrict) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecoDistrict = ecoDistrict;
        populateAreasAdminTable();
        populateAreasComboBox();
    }
    
    public void populateAreasAdminTable()
    {
        DefaultTableModel dtm = (DefaultTableModel)neighborhoodAdminTable.getModel();
        dtm.setRowCount(0);
        
        for(Neighborhood neighborhood : ecoDistrict.getNeighborhoodList())
        {
            for(UserAccount userAccount :neighborhood.getUserAccDir().getUserAccountList())
            {
                Object[] row = new Object[3];
                row[0] = neighborhood.getNeighborhoodName();
                row[1] = userAccount.getPerson().getPersonName();
                row[2] = userAccount.getUsername();
                dtm.addRow(row);
            }
        }
    }
    
    public void populateAreasComboBox()
    {
        areasComboBox.removeAllItems();
        
        for (Neighborhood neighborhood : ecoDistrict.getNeighborhoodList()){
            areasComboBox.addItem(neighborhood);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        neighborhoodAdminTable = new javax.swing.JTable();
        createAdminBtn = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        pwdjPasswordField = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        adminNameTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        areasComboBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        adminUserNameTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        neighborhoodAdminTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Neighorhood Area", "Admin Name", "User Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(neighborhoodAdminTable);

        createAdminBtn.setBackground(new java.awt.Color(0, 153, 0));
        createAdminBtn.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        createAdminBtn.setForeground(new java.awt.Color(255, 255, 255));
        createAdminBtn.setText("Create Account");
        createAdminBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAdminBtnActionPerformed(evt);
            }
        });

        backJButton.setBackground(new java.awt.Color(0, 153, 0));
        backJButton.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Create Area Admin Account", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 0, 11), new java.awt.Color(102, 0, 102))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel3.setText("User Name");

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel1.setText("Neighborhood Areas");

        areasComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userInterface/DistrictAdminRole/admin1.png"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel4.setText("Password");

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel2.setText("Admin Name");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(162, 328, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pwdjPasswordField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                            .addComponent(adminNameTxt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(adminUserNameTxt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(areasComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(areasComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(adminNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(adminUserNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)))))
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(pwdjPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(createAdminBtn)
                        .addGap(118, 118, 118))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addComponent(jLabel5)
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(createAdminBtn))
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        DistrictAdminWorkAreaJPanel dstAdminwjp = (DistrictAdminWorkAreaJPanel) component;
        dstAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void createAdminBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAdminBtnActionPerformed
        // TODO add your handling code here:
        
        if(adminNameTxt.getText().length() != 0 && adminUserNameTxt.getText().length() != 0 &&
                pwdjPasswordField.getPassword().length != 0)
        {
            Neighborhood neighborhood = (Neighborhood)areasComboBox.getSelectedItem();

            String adminName = adminNameTxt.getText();
            String userName = adminUserNameTxt.getText();
            String password = String.valueOf(pwdjPasswordField.getPassword());
//            boolean isUnique = neighborhood.getUserAccDir().checkIfUserNameIsUnique(userName);
//            if(isUnique)
            for(Neighborhood area :ecoDistrict.getNeighborhoodList()){
                if(area!=null){
                    if(!area.getUserAccDir().checkIfUserNameIsUnique(userName)){
                        JOptionPane.showMessageDialog(this, "User Name Already Exists", "ERROR", JOptionPane.ERROR_MESSAGE);
                    return;
                    }
                
                    for (Enterprise entType : area.getEnterpriseList().getEnterpriseList()) {
                    if (entType != null) {
                        if (!entType.getUserAccDir().checkIfUserNameIsUnique(userName)) {
                            JOptionPane.showMessageDialog(this, "User Name Already Exists", "ERROR", JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                    for (Organization orgType : entType.getOrganizationList().getOrganizationList()) {
                    if (orgType != null) {
                        if (!orgType.getUserAccDir().checkIfUserNameIsUnique(userName)) {
                            JOptionPane.showMessageDialog(this, "User Name Already Exists", "ERROR", JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                    for (UserAccount UA : orgType.getUserAccDir().getUserAccountList()) {
                        if (UA.getUsername().equalsIgnoreCase(userName)) {
                            JOptionPane.showMessageDialog(this, "User Name Already Exists", "ERROR", JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                      }
                    }
                  }
                }
              }
            }
            }
            Person person = neighborhood.getPersonDir().addPerson(adminName);
            UserAccount userAcc = neighborhood.getUserAccDir().createUserAccount(userName, password, person, new NeighborhoodAdmin());
            populateAreasAdminTable();
            JOptionPane.showMessageDialog(null, "Network Admin has been created Successfully", "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
            adminNameTxt.setText("");
            adminUserNameTxt.setText("");
            pwdjPasswordField.setText("");
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please enter all the datails", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_createAdminBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField adminNameTxt;
    private javax.swing.JTextField adminUserNameTxt;
    private javax.swing.JComboBox areasComboBox;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton createAdminBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable neighborhoodAdminTable;
    private javax.swing.JPasswordField pwdjPasswordField;
    // End of variables declaration//GEN-END:variables
}
